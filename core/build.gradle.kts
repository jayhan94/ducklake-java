/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use SLF4J for logging abstraction. The application that uses this library
    // should provide the logging implementation.
    implementation("org.slf4j:slf4j-api:2.0.9")

    implementation(libs.guava)
    implementation("com.google.code.gson:gson:2.13.1")

    // duckdb
    implementation(libs.duckdb)

    // jdbi
    implementation(libs.jdbi.core)
    implementation(libs.jdbi.jpa)
    implementation(libs.jdbi.sqlobject)
    // connection pool
    implementation("com.zaxxer:HikariCP:6.2.1")

    compileOnly("org.projectlombok:lombok:1.18.30")
    annotationProcessor("org.projectlombok:lombok:1.18.30")
    testCompileOnly("org.projectlombok:lombok:1.18.30")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.30")

    // tests
    testImplementation(libs.junit)
    testImplementation("org.postgresql:postgresql:42.7.3")
    testImplementation("org.testcontainers:postgresql:1.19.8")
    testImplementation("com.mysql:mysql-connector-j:9.3.0")
    testImplementation("org.testcontainers:mysql:1.20.0")
    testImplementation("org.xerial:sqlite-jdbc:3.49.1.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

task<JavaExec>("runExample") {
    mainClass.set("io.github.jayhan94.ducklake.examples.CatalogExample")
    classpath = sourceSets["main"].runtimeClasspath
}
